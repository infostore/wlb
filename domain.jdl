entity Project {
    name String required unique maxlength(100),
    description TextBlob
}

entity Milestone {
    name String required maxlength(100),
    description TextBlob,
    milestoneStatus MilestoneStatus,
    dueDate Instant
}

enum MilestoneStatus {
    NEW,
    OPEN,
    CLOSED
}

entity Issue {
    name String required maxlength(100),
    description TextBlob,
    issueType IssueType required,
    issueStatus IssueStatus required,
    priority Priority required,
    resolution Resolution,
    dueDate Instant
}

enum IssueType {
    ISSUE, TASK, BUG
}

enum IssueStatus {
    NEW,
    OPEN,
    CLOSED
}

enum Priority {
    LOWEST, LOW, MEDIUM, HIGH, HIGHEST
}

enum Resolution {
    DONE,
    DUPLICATE,
    REJECT
}

entity Comment {
    description TextBlob
}

entity LabelGroup {
    name String required unique maxlength(10)
}

entity Label {
    name String required unique maxlength(10)
}

entity IssueLabel {}

entity IssueAssignee {}

entity IssueWatcher {}

entity Attachment {
    name String required,
    path String required
}

entity IssueAttachment {
}

entity ProjectActivity {
    activity String required maxlength(4000)
}

entity IssueActivity {
    activity String required maxlength(4000)
}


relationship OneToMany {
    Issue{assignee} to IssueAssignee,
    Issue{watcher} to IssueWatcher,
    Issue{comment} to Comment,
    Issue{issueLabel} to IssueLabel,
    Label{issueLabel} to IssueLabel,
    Issue{issueAttachment} to IssueAttachment,
    Project{projectActivity} to ProjectActivity,
    Issue{issueActivity} to IssueActivity
}

relationship ManyToOne {
    IssueAssignee{user} to User,
    IssueWatcher{user} to User,
    IssueAttachment{attachment} to Attachment,
    Issue{project(name)} to Project,
    Issue{milestone(name)} to Milestone,
    Milestone{project(name)} to Project,
    Label{labelGroup(name)} to LabelGroup
}

dto * with mapstruct
paginate * with pagination
service * with serviceClass
filter Issue
